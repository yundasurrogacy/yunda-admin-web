schema {
  query: query_root
  mutation: mutation_root
  subscription: subscription_root
}

"""whether this query should be cached (Hasura Cloud only)"""
directive @cached(
  """refresh the cache entry"""
  refresh: Boolean! = false

  """measured in seconds"""
  ttl: Int! = 60
) on QUERY

"""
Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'.
"""
input String_comparison_exp {
  _eq: String
  _gt: String
  _gte: String

  """does the column match the given case-insensitive pattern"""
  _ilike: String
  _in: [String!]

  """
  does the column match the given POSIX regular expression, case insensitive
  """
  _iregex: String
  _is_null: Boolean

  """does the column match the given pattern"""
  _like: String
  _lt: String
  _lte: String
  _neq: String

  """does the column NOT match the given case-insensitive pattern"""
  _nilike: String
  _nin: [String!]

  """
  does the column NOT match the given POSIX regular expression, case insensitive
  """
  _niregex: String

  """does the column NOT match the given pattern"""
  _nlike: String

  """
  does the column NOT match the given POSIX regular expression, case sensitive
  """
  _nregex: String

  """does the column NOT match the given SQL regular expression"""
  _nsimilar: String

  """
  does the column match the given POSIX regular expression, case sensitive
  """
  _regex: String

  """does the column match the given SQL regular expression"""
  _similar: String
}

scalar bigint

"""
Boolean expression to compare columns of type "bigint". All fields are combined with logical 'AND'.
"""
input bigint_comparison_exp {
  _eq: bigint
  _gt: bigint
  _gte: bigint
  _in: [bigint!]
  _is_null: Boolean
  _lt: bigint
  _lte: bigint
  _neq: bigint
  _nin: [bigint!]
}

"""配置表，一般不能删除，只能修改，具体配置信息取决于项目"""
type configs {
  created_at: timestamptz!

  """配置描述"""
  description: String
  id: bigint!

  """配置名称，唯一"""
  name: String!
  updated_at: timestamptz!

  """配置内容"""
  value(
    """JSON select path"""
    path: String
  ): jsonb
}

"""
aggregated selection of "configs"
"""
type configs_aggregate {
  aggregate: configs_aggregate_fields
  nodes: [configs!]!
}

"""
aggregate fields of "configs"
"""
type configs_aggregate_fields {
  avg: configs_avg_fields
  count(columns: [configs_select_column!], distinct: Boolean): Int!
  max: configs_max_fields
  min: configs_min_fields
  stddev: configs_stddev_fields
  stddev_pop: configs_stddev_pop_fields
  stddev_samp: configs_stddev_samp_fields
  sum: configs_sum_fields
  var_pop: configs_var_pop_fields
  var_samp: configs_var_samp_fields
  variance: configs_variance_fields
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input configs_append_input {
  """配置内容"""
  value: jsonb
}

"""aggregate avg on columns"""
type configs_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "configs". All fields are combined with a logical 'AND'.
"""
input configs_bool_exp {
  _and: [configs_bool_exp!]
  _not: configs_bool_exp
  _or: [configs_bool_exp!]
  created_at: timestamptz_comparison_exp
  description: String_comparison_exp
  id: bigint_comparison_exp
  name: String_comparison_exp
  updated_at: timestamptz_comparison_exp
  value: jsonb_comparison_exp
}

"""
unique or primary key constraints on table "configs"
"""
enum configs_constraint {
  """
  unique or primary key constraint on columns "name"
  """
  configs_name_key

  """
  unique or primary key constraint on columns "id"
  """
  configs_pkey
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input configs_delete_at_path_input {
  """配置内容"""
  value: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input configs_delete_elem_input {
  """配置内容"""
  value: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input configs_delete_key_input {
  """配置内容"""
  value: String
}

"""
input type for incrementing numeric columns in table "configs"
"""
input configs_inc_input {
  id: bigint
}

"""
input type for inserting data into table "configs"
"""
input configs_insert_input {
  created_at: timestamptz

  """配置描述"""
  description: String
  id: bigint

  """配置名称，唯一"""
  name: String
  updated_at: timestamptz

  """配置内容"""
  value: jsonb
}

"""aggregate max on columns"""
type configs_max_fields {
  created_at: timestamptz

  """配置描述"""
  description: String
  id: bigint

  """配置名称，唯一"""
  name: String
  updated_at: timestamptz
}

"""aggregate min on columns"""
type configs_min_fields {
  created_at: timestamptz

  """配置描述"""
  description: String
  id: bigint

  """配置名称，唯一"""
  name: String
  updated_at: timestamptz
}

"""
response of any mutation on the table "configs"
"""
type configs_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [configs!]!
}

"""
on_conflict condition type for table "configs"
"""
input configs_on_conflict {
  constraint: configs_constraint!
  update_columns: [configs_update_column!]! = []
  where: configs_bool_exp
}

"""Ordering options when selecting data from "configs"."""
input configs_order_by {
  created_at: order_by
  description: order_by
  id: order_by
  name: order_by
  updated_at: order_by
  value: order_by
}

"""primary key columns input for table: configs"""
input configs_pk_columns_input {
  id: bigint!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input configs_prepend_input {
  """配置内容"""
  value: jsonb
}

"""
select columns of table "configs"
"""
enum configs_select_column {
  """column name"""
  created_at

  """column name"""
  description

  """column name"""
  id

  """column name"""
  name

  """column name"""
  updated_at

  """column name"""
  value
}

"""
input type for updating data in table "configs"
"""
input configs_set_input {
  created_at: timestamptz

  """配置描述"""
  description: String
  id: bigint

  """配置名称，唯一"""
  name: String
  updated_at: timestamptz

  """配置内容"""
  value: jsonb
}

"""aggregate stddev on columns"""
type configs_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type configs_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type configs_stddev_samp_fields {
  id: Float
}

"""
Streaming cursor of the table "configs"
"""
input configs_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: configs_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input configs_stream_cursor_value_input {
  created_at: timestamptz

  """配置描述"""
  description: String
  id: bigint

  """配置名称，唯一"""
  name: String
  updated_at: timestamptz

  """配置内容"""
  value: jsonb
}

"""aggregate sum on columns"""
type configs_sum_fields {
  id: bigint
}

"""
update columns of table "configs"
"""
enum configs_update_column {
  """column name"""
  created_at

  """column name"""
  description

  """column name"""
  id

  """column name"""
  name

  """column name"""
  updated_at

  """column name"""
  value
}

input configs_updates {
  """append existing jsonb value of filtered columns with new jsonb value"""
  _append: configs_append_input

  """
  delete the field or element with specified path (for JSON arrays, negative integers count from the end)
  """
  _delete_at_path: configs_delete_at_path_input

  """
  delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
  """
  _delete_elem: configs_delete_elem_input

  """
  delete key/value pair or string element. key/value pairs are matched based on their key value
  """
  _delete_key: configs_delete_key_input

  """increments the numeric columns with given value of the filtered values"""
  _inc: configs_inc_input

  """prepend existing jsonb value of filtered columns with new jsonb value"""
  _prepend: configs_prepend_input

  """sets the columns of the filtered rows to the given values"""
  _set: configs_set_input

  """filter the rows which have to be updated"""
  where: configs_bool_exp!
}

"""aggregate var_pop on columns"""
type configs_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type configs_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type configs_variance_fields {
  id: Float
}

"""ordering argument of a cursor"""
enum cursor_ordering {
  """ascending ordering of the cursor"""
  ASC

  """descending ordering of the cursor"""
  DESC
}

scalar jsonb

input jsonb_cast_exp {
  String: String_comparison_exp
}

"""
Boolean expression to compare columns of type "jsonb". All fields are combined with logical 'AND'.
"""
input jsonb_comparison_exp {
  _cast: jsonb_cast_exp

  """is the column contained in the given json value"""
  _contained_in: jsonb

  """does the column contain the given json value at the top level"""
  _contains: jsonb
  _eq: jsonb
  _gt: jsonb
  _gte: jsonb

  """does the string exist as a top-level key in the column"""
  _has_key: String

  """do all of these strings exist as top-level keys in the column"""
  _has_keys_all: [String!]

  """do any of these strings exist as top-level keys in the column"""
  _has_keys_any: [String!]
  _in: [jsonb!]
  _is_null: Boolean
  _lt: jsonb
  _lte: jsonb
  _neq: jsonb
  _nin: [jsonb!]
}

"""mutation root"""
type mutation_root {
  """
  delete data from the table: "configs"
  """
  delete_configs(
    """filter the rows which have to be deleted"""
    where: configs_bool_exp!
  ): configs_mutation_response

  """
  delete single row from the table: "configs"
  """
  delete_configs_by_pk(id: bigint!): configs

  """
  delete data from the table: "resources"
  """
  delete_resources(
    """filter the rows which have to be deleted"""
    where: resources_bool_exp!
  ): resources_mutation_response

  """
  delete single row from the table: "resources"
  """
  delete_resources_by_pk(id: bigint!): resources

  """
  delete data from the table: "users"
  """
  delete_users(
    """filter the rows which have to be deleted"""
    where: users_bool_exp!
  ): users_mutation_response

  """
  delete single row from the table: "users"
  """
  delete_users_by_pk(id: bigint!): users

  """
  insert data into the table: "configs"
  """
  insert_configs(
    """the rows to be inserted"""
    objects: [configs_insert_input!]!

    """upsert condition"""
    on_conflict: configs_on_conflict
  ): configs_mutation_response

  """
  insert a single row into the table: "configs"
  """
  insert_configs_one(
    """the row to be inserted"""
    object: configs_insert_input!

    """upsert condition"""
    on_conflict: configs_on_conflict
  ): configs

  """
  insert data into the table: "resources"
  """
  insert_resources(
    """the rows to be inserted"""
    objects: [resources_insert_input!]!

    """upsert condition"""
    on_conflict: resources_on_conflict
  ): resources_mutation_response

  """
  insert a single row into the table: "resources"
  """
  insert_resources_one(
    """the row to be inserted"""
    object: resources_insert_input!

    """upsert condition"""
    on_conflict: resources_on_conflict
  ): resources

  """
  insert data into the table: "users"
  """
  insert_users(
    """the rows to be inserted"""
    objects: [users_insert_input!]!

    """upsert condition"""
    on_conflict: users_on_conflict
  ): users_mutation_response

  """
  insert a single row into the table: "users"
  """
  insert_users_one(
    """the row to be inserted"""
    object: users_insert_input!

    """upsert condition"""
    on_conflict: users_on_conflict
  ): users

  """
  update data of the table: "configs"
  """
  update_configs(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: configs_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: configs_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: configs_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: configs_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: configs_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: configs_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: configs_set_input

    """filter the rows which have to be updated"""
    where: configs_bool_exp!
  ): configs_mutation_response

  """
  update single row of the table: "configs"
  """
  update_configs_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: configs_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: configs_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: configs_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: configs_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: configs_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: configs_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: configs_set_input
    pk_columns: configs_pk_columns_input!
  ): configs

  """
  update multiples rows of table: "configs"
  """
  update_configs_many(
    """updates to execute, in order"""
    updates: [configs_updates!]!
  ): [configs_mutation_response]

  """
  update data of the table: "resources"
  """
  update_resources(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: resources_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: resources_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: resources_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: resources_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: resources_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: resources_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: resources_set_input

    """filter the rows which have to be updated"""
    where: resources_bool_exp!
  ): resources_mutation_response

  """
  update single row of the table: "resources"
  """
  update_resources_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: resources_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: resources_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: resources_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: resources_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: resources_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: resources_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: resources_set_input
    pk_columns: resources_pk_columns_input!
  ): resources

  """
  update multiples rows of table: "resources"
  """
  update_resources_many(
    """updates to execute, in order"""
    updates: [resources_updates!]!
  ): [resources_mutation_response]

  """
  update data of the table: "users"
  """
  update_users(
    """increments the numeric columns with given value of the filtered values"""
    _inc: users_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: users_set_input

    """filter the rows which have to be updated"""
    where: users_bool_exp!
  ): users_mutation_response

  """
  update single row of the table: "users"
  """
  update_users_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: users_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: users_set_input
    pk_columns: users_pk_columns_input!
  ): users

  """
  update multiples rows of table: "users"
  """
  update_users_many(
    """updates to execute, in order"""
    updates: [users_updates!]!
  ): [users_mutation_response]
}

"""column ordering options"""
enum order_by {
  """in ascending order, nulls last"""
  asc

  """in ascending order, nulls first"""
  asc_nulls_first

  """in ascending order, nulls last"""
  asc_nulls_last

  """in descending order, nulls first"""
  desc

  """in descending order, nulls first"""
  desc_nulls_first

  """in descending order, nulls last"""
  desc_nulls_last
}

type query_root {
  """
  fetch data from the table: "configs"
  """
  configs(
    """distinct select on columns"""
    distinct_on: [configs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [configs_order_by!]

    """filter the rows returned"""
    where: configs_bool_exp
  ): [configs!]!

  """
  fetch aggregated fields from the table: "configs"
  """
  configs_aggregate(
    """distinct select on columns"""
    distinct_on: [configs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [configs_order_by!]

    """filter the rows returned"""
    where: configs_bool_exp
  ): configs_aggregate!

  """fetch data from the table: "configs" using primary key columns"""
  configs_by_pk(id: bigint!): configs

  """
  fetch data from the table: "resources"
  """
  resources(
    """distinct select on columns"""
    distinct_on: [resources_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [resources_order_by!]

    """filter the rows returned"""
    where: resources_bool_exp
  ): [resources!]!

  """
  fetch aggregated fields from the table: "resources"
  """
  resources_aggregate(
    """distinct select on columns"""
    distinct_on: [resources_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [resources_order_by!]

    """filter the rows returned"""
    where: resources_bool_exp
  ): resources_aggregate!

  """fetch data from the table: "resources" using primary key columns"""
  resources_by_pk(id: bigint!): resources

  """
  fetch data from the table: "users"
  """
  users(
    """distinct select on columns"""
    distinct_on: [users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [users_order_by!]

    """filter the rows returned"""
    where: users_bool_exp
  ): [users!]!

  """
  fetch aggregated fields from the table: "users"
  """
  users_aggregate(
    """distinct select on columns"""
    distinct_on: [users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [users_order_by!]

    """filter the rows returned"""
    where: users_bool_exp
  ): users_aggregate!

  """fetch data from the table: "users" using primary key columns"""
  users_by_pk(id: bigint!): users
}

"""资源信息，可用于管理客户端的资源内容，如字典、枚举等"""
type resources {
  """一级分类，如：轮播图"""
  category: String!
  created_at: timestamptz!

  """内容描述"""
  description: String
  id: bigint!

  """名称，在某分类下必须唯一，如：首页轮播图-1、首页轮播图-2"""
  name: String!
  updated_at: timestamptz!

  """数据，可以是任何内容"""
  value(
    """JSON select path"""
    path: String
  ): jsonb
}

"""
aggregated selection of "resources"
"""
type resources_aggregate {
  aggregate: resources_aggregate_fields
  nodes: [resources!]!
}

"""
aggregate fields of "resources"
"""
type resources_aggregate_fields {
  avg: resources_avg_fields
  count(columns: [resources_select_column!], distinct: Boolean): Int!
  max: resources_max_fields
  min: resources_min_fields
  stddev: resources_stddev_fields
  stddev_pop: resources_stddev_pop_fields
  stddev_samp: resources_stddev_samp_fields
  sum: resources_sum_fields
  var_pop: resources_var_pop_fields
  var_samp: resources_var_samp_fields
  variance: resources_variance_fields
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input resources_append_input {
  """数据，可以是任何内容"""
  value: jsonb
}

"""aggregate avg on columns"""
type resources_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "resources". All fields are combined with a logical 'AND'.
"""
input resources_bool_exp {
  _and: [resources_bool_exp!]
  _not: resources_bool_exp
  _or: [resources_bool_exp!]
  category: String_comparison_exp
  created_at: timestamptz_comparison_exp
  description: String_comparison_exp
  id: bigint_comparison_exp
  name: String_comparison_exp
  updated_at: timestamptz_comparison_exp
  value: jsonb_comparison_exp
}

"""
unique or primary key constraints on table "resources"
"""
enum resources_constraint {
  """
  unique or primary key constraint on columns "category", "name"
  """
  resources_category_name_key

  """
  unique or primary key constraint on columns "id"
  """
  resources_pkey
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input resources_delete_at_path_input {
  """数据，可以是任何内容"""
  value: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input resources_delete_elem_input {
  """数据，可以是任何内容"""
  value: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input resources_delete_key_input {
  """数据，可以是任何内容"""
  value: String
}

"""
input type for incrementing numeric columns in table "resources"
"""
input resources_inc_input {
  id: bigint
}

"""
input type for inserting data into table "resources"
"""
input resources_insert_input {
  """一级分类，如：轮播图"""
  category: String
  created_at: timestamptz

  """内容描述"""
  description: String
  id: bigint

  """名称，在某分类下必须唯一，如：首页轮播图-1、首页轮播图-2"""
  name: String
  updated_at: timestamptz

  """数据，可以是任何内容"""
  value: jsonb
}

"""aggregate max on columns"""
type resources_max_fields {
  """一级分类，如：轮播图"""
  category: String
  created_at: timestamptz

  """内容描述"""
  description: String
  id: bigint

  """名称，在某分类下必须唯一，如：首页轮播图-1、首页轮播图-2"""
  name: String
  updated_at: timestamptz
}

"""aggregate min on columns"""
type resources_min_fields {
  """一级分类，如：轮播图"""
  category: String
  created_at: timestamptz

  """内容描述"""
  description: String
  id: bigint

  """名称，在某分类下必须唯一，如：首页轮播图-1、首页轮播图-2"""
  name: String
  updated_at: timestamptz
}

"""
response of any mutation on the table "resources"
"""
type resources_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [resources!]!
}

"""
on_conflict condition type for table "resources"
"""
input resources_on_conflict {
  constraint: resources_constraint!
  update_columns: [resources_update_column!]! = []
  where: resources_bool_exp
}

"""Ordering options when selecting data from "resources"."""
input resources_order_by {
  category: order_by
  created_at: order_by
  description: order_by
  id: order_by
  name: order_by
  updated_at: order_by
  value: order_by
}

"""primary key columns input for table: resources"""
input resources_pk_columns_input {
  id: bigint!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input resources_prepend_input {
  """数据，可以是任何内容"""
  value: jsonb
}

"""
select columns of table "resources"
"""
enum resources_select_column {
  """column name"""
  category

  """column name"""
  created_at

  """column name"""
  description

  """column name"""
  id

  """column name"""
  name

  """column name"""
  updated_at

  """column name"""
  value
}

"""
input type for updating data in table "resources"
"""
input resources_set_input {
  """一级分类，如：轮播图"""
  category: String
  created_at: timestamptz

  """内容描述"""
  description: String
  id: bigint

  """名称，在某分类下必须唯一，如：首页轮播图-1、首页轮播图-2"""
  name: String
  updated_at: timestamptz

  """数据，可以是任何内容"""
  value: jsonb
}

"""aggregate stddev on columns"""
type resources_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type resources_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type resources_stddev_samp_fields {
  id: Float
}

"""
Streaming cursor of the table "resources"
"""
input resources_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: resources_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input resources_stream_cursor_value_input {
  """一级分类，如：轮播图"""
  category: String
  created_at: timestamptz

  """内容描述"""
  description: String
  id: bigint

  """名称，在某分类下必须唯一，如：首页轮播图-1、首页轮播图-2"""
  name: String
  updated_at: timestamptz

  """数据，可以是任何内容"""
  value: jsonb
}

"""aggregate sum on columns"""
type resources_sum_fields {
  id: bigint
}

"""
update columns of table "resources"
"""
enum resources_update_column {
  """column name"""
  category

  """column name"""
  created_at

  """column name"""
  description

  """column name"""
  id

  """column name"""
  name

  """column name"""
  updated_at

  """column name"""
  value
}

input resources_updates {
  """append existing jsonb value of filtered columns with new jsonb value"""
  _append: resources_append_input

  """
  delete the field or element with specified path (for JSON arrays, negative integers count from the end)
  """
  _delete_at_path: resources_delete_at_path_input

  """
  delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
  """
  _delete_elem: resources_delete_elem_input

  """
  delete key/value pair or string element. key/value pairs are matched based on their key value
  """
  _delete_key: resources_delete_key_input

  """increments the numeric columns with given value of the filtered values"""
  _inc: resources_inc_input

  """prepend existing jsonb value of filtered columns with new jsonb value"""
  _prepend: resources_prepend_input

  """sets the columns of the filtered rows to the given values"""
  _set: resources_set_input

  """filter the rows which have to be updated"""
  where: resources_bool_exp!
}

"""aggregate var_pop on columns"""
type resources_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type resources_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type resources_variance_fields {
  id: Float
}

type subscription_root {
  """
  fetch data from the table: "configs"
  """
  configs(
    """distinct select on columns"""
    distinct_on: [configs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [configs_order_by!]

    """filter the rows returned"""
    where: configs_bool_exp
  ): [configs!]!

  """
  fetch aggregated fields from the table: "configs"
  """
  configs_aggregate(
    """distinct select on columns"""
    distinct_on: [configs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [configs_order_by!]

    """filter the rows returned"""
    where: configs_bool_exp
  ): configs_aggregate!

  """fetch data from the table: "configs" using primary key columns"""
  configs_by_pk(id: bigint!): configs

  """
  fetch data from the table in a streaming manner: "configs"
  """
  configs_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [configs_stream_cursor_input]!

    """filter the rows returned"""
    where: configs_bool_exp
  ): [configs!]!

  """
  fetch data from the table: "resources"
  """
  resources(
    """distinct select on columns"""
    distinct_on: [resources_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [resources_order_by!]

    """filter the rows returned"""
    where: resources_bool_exp
  ): [resources!]!

  """
  fetch aggregated fields from the table: "resources"
  """
  resources_aggregate(
    """distinct select on columns"""
    distinct_on: [resources_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [resources_order_by!]

    """filter the rows returned"""
    where: resources_bool_exp
  ): resources_aggregate!

  """fetch data from the table: "resources" using primary key columns"""
  resources_by_pk(id: bigint!): resources

  """
  fetch data from the table in a streaming manner: "resources"
  """
  resources_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [resources_stream_cursor_input]!

    """filter the rows returned"""
    where: resources_bool_exp
  ): [resources!]!

  """
  fetch data from the table: "users"
  """
  users(
    """distinct select on columns"""
    distinct_on: [users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [users_order_by!]

    """filter the rows returned"""
    where: users_bool_exp
  ): [users!]!

  """
  fetch aggregated fields from the table: "users"
  """
  users_aggregate(
    """distinct select on columns"""
    distinct_on: [users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [users_order_by!]

    """filter the rows returned"""
    where: users_bool_exp
  ): users_aggregate!

  """fetch data from the table: "users" using primary key columns"""
  users_by_pk(id: bigint!): users

  """
  fetch data from the table in a streaming manner: "users"
  """
  users_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [users_stream_cursor_input]!

    """filter the rows returned"""
    where: users_bool_exp
  ): [users!]!
}

scalar timestamptz

"""
Boolean expression to compare columns of type "timestamptz". All fields are combined with logical 'AND'.
"""
input timestamptz_comparison_exp {
  _eq: timestamptz
  _gt: timestamptz
  _gte: timestamptz
  _in: [timestamptz!]
  _is_null: Boolean
  _lt: timestamptz
  _lte: timestamptz
  _neq: timestamptz
  _nin: [timestamptz!]
}

"""用户表"""
type users {
  """个人简介"""
  bio: String!

  """创建时间"""
  created_at: timestamptz!

  """邮箱"""
  email: String

  """性别：1.男 2.女 3.保密"""
  gender: String!
  id: bigint!

  """注册手机号"""
  mobile: String

  """昵称"""
  nickname: String

  """密码-32位小写md5"""
  password: String

  """更新时间"""
  updated_at: timestamptz!
}

"""
aggregated selection of "users"
"""
type users_aggregate {
  aggregate: users_aggregate_fields
  nodes: [users!]!
}

"""
aggregate fields of "users"
"""
type users_aggregate_fields {
  avg: users_avg_fields
  count(columns: [users_select_column!], distinct: Boolean): Int!
  max: users_max_fields
  min: users_min_fields
  stddev: users_stddev_fields
  stddev_pop: users_stddev_pop_fields
  stddev_samp: users_stddev_samp_fields
  sum: users_sum_fields
  var_pop: users_var_pop_fields
  var_samp: users_var_samp_fields
  variance: users_variance_fields
}

"""aggregate avg on columns"""
type users_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "users". All fields are combined with a logical 'AND'.
"""
input users_bool_exp {
  _and: [users_bool_exp!]
  _not: users_bool_exp
  _or: [users_bool_exp!]
  bio: String_comparison_exp
  created_at: timestamptz_comparison_exp
  email: String_comparison_exp
  gender: String_comparison_exp
  id: bigint_comparison_exp
  mobile: String_comparison_exp
  nickname: String_comparison_exp
  password: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "users"
"""
enum users_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  users_pkey
}

"""
input type for incrementing numeric columns in table "users"
"""
input users_inc_input {
  id: bigint
}

"""
input type for inserting data into table "users"
"""
input users_insert_input {
  """个人简介"""
  bio: String

  """创建时间"""
  created_at: timestamptz

  """邮箱"""
  email: String

  """性别：1.男 2.女 3.保密"""
  gender: String
  id: bigint

  """注册手机号"""
  mobile: String

  """昵称"""
  nickname: String

  """密码-32位小写md5"""
  password: String

  """更新时间"""
  updated_at: timestamptz
}

"""aggregate max on columns"""
type users_max_fields {
  """个人简介"""
  bio: String

  """创建时间"""
  created_at: timestamptz

  """邮箱"""
  email: String

  """性别：1.男 2.女 3.保密"""
  gender: String
  id: bigint

  """注册手机号"""
  mobile: String

  """昵称"""
  nickname: String

  """密码-32位小写md5"""
  password: String

  """更新时间"""
  updated_at: timestamptz
}

"""aggregate min on columns"""
type users_min_fields {
  """个人简介"""
  bio: String

  """创建时间"""
  created_at: timestamptz

  """邮箱"""
  email: String

  """性别：1.男 2.女 3.保密"""
  gender: String
  id: bigint

  """注册手机号"""
  mobile: String

  """昵称"""
  nickname: String

  """密码-32位小写md5"""
  password: String

  """更新时间"""
  updated_at: timestamptz
}

"""
response of any mutation on the table "users"
"""
type users_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [users!]!
}

"""
on_conflict condition type for table "users"
"""
input users_on_conflict {
  constraint: users_constraint!
  update_columns: [users_update_column!]! = []
  where: users_bool_exp
}

"""Ordering options when selecting data from "users"."""
input users_order_by {
  bio: order_by
  created_at: order_by
  email: order_by
  gender: order_by
  id: order_by
  mobile: order_by
  nickname: order_by
  password: order_by
  updated_at: order_by
}

"""primary key columns input for table: users"""
input users_pk_columns_input {
  id: bigint!
}

"""
select columns of table "users"
"""
enum users_select_column {
  """column name"""
  bio

  """column name"""
  created_at

  """column name"""
  email

  """column name"""
  gender

  """column name"""
  id

  """column name"""
  mobile

  """column name"""
  nickname

  """column name"""
  password

  """column name"""
  updated_at
}

"""
input type for updating data in table "users"
"""
input users_set_input {
  """个人简介"""
  bio: String

  """创建时间"""
  created_at: timestamptz

  """邮箱"""
  email: String

  """性别：1.男 2.女 3.保密"""
  gender: String
  id: bigint

  """注册手机号"""
  mobile: String

  """昵称"""
  nickname: String

  """密码-32位小写md5"""
  password: String

  """更新时间"""
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type users_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type users_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type users_stddev_samp_fields {
  id: Float
}

"""
Streaming cursor of the table "users"
"""
input users_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: users_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input users_stream_cursor_value_input {
  """个人简介"""
  bio: String

  """创建时间"""
  created_at: timestamptz

  """邮箱"""
  email: String

  """性别：1.男 2.女 3.保密"""
  gender: String
  id: bigint

  """注册手机号"""
  mobile: String

  """昵称"""
  nickname: String

  """密码-32位小写md5"""
  password: String

  """更新时间"""
  updated_at: timestamptz
}

"""aggregate sum on columns"""
type users_sum_fields {
  id: bigint
}

"""
update columns of table "users"
"""
enum users_update_column {
  """column name"""
  bio

  """column name"""
  created_at

  """column name"""
  email

  """column name"""
  gender

  """column name"""
  id

  """column name"""
  mobile

  """column name"""
  nickname

  """column name"""
  password

  """column name"""
  updated_at
}

input users_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: users_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: users_set_input

  """filter the rows which have to be updated"""
  where: users_bool_exp!
}

"""aggregate var_pop on columns"""
type users_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type users_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type users_variance_fields {
  id: Float
}